'vsolver#1'
spacer_proxy!272
(! INV_ext0_n)
'INV#level_0!10'
'INV#level_1!13'
(! 'INV#level_2!14')
(! 'INV#level_3!16')
(! 'INV#level_4!18')
(! 'INV#level_5!20')
(! 'INV#level_6!22')
spacer_proxy!140
spacer_proxy!45
spacer_proxy!12
spacer_proxy!139
0
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
2
3
2
3
2
3
2
3
1
2
1
2
2
3
1
2
1
2
1
2
1
2
1
2
2
3
[Not(INV_5_n <= -1/32), INV_3_n == 0, INV_6_n <= 0, Not(549695/272967*INV_5_n +
    -452690/272967*INV_0_n +
    -64670/90989*INV_4_n +
    -32335/272967*INV_2_n +
    -232361/90989*INV_1_n <=
    9858161/419277312), Not(19618/8323*INV_5_n +
    -2308/1189*INV_0_n +
    -34620/8323*INV_1_n +
    -6924/8323*INV_4_n +
    -1154/8323*INV_2_n +
    -1*INV_6_n <=
    -70211/2130688)]
PARSED CUBE [Not(INV_5_n <= -1/32), INV_3_n == 0, INV_6_n <= 0, Not(549695/272967*INV_5_n +
    -452690/272967*INV_0_n +
    -64670/90989*INV_4_n +
    -32335/272967*INV_2_n +
    -232361/90989*INV_1_n <=
    9858161/419277312), Not(19618/8323*INV_5_n +
    -2308/1189*INV_0_n +
    -34620/8323*INV_1_n +
    -6924/8323*INV_4_n +
    -1154/8323*INV_2_n +
    -1*INV_6_n <=
    -70211/2130688)]
ADDING LEMMAS AT LEVEL Not(INV#level_0!10)
	 0 Or(Not(INV__tr1), Not(vsolver#1))
LEN SELF._LEVELS 0
	 0 Or(Not(vsolver#1), 1/8 <= INV_0_n)
LEN SELF._LEVELS 1
	 0 Or(Not(vsolver#1), 0 <= INV_3_n)
LEN SELF._LEVELS 1
	 0 Or(Not(vsolver#1), 1/16 <= INV_4_n)
LEN SELF._LEVELS 1
	 0 Or(Not(vsolver#1), 1/32 <= INV_2_n)
LEN SELF._LEVELS 1
	 0 Or(Not(vsolver#1), INV_5_n <= -1/32)
LEN SELF._LEVELS 1
	 0 Or(Not(vsolver#1), INV_6_n <= -1/32)
LEN SELF._LEVELS 1
	 0 Or(Not(vsolver#1), Not(INV_1_n <= 0))
LEN SELF._LEVELS 1
	 0 Or(Not(vsolver#1), INV_3_n <= 0)
LEN SELF._LEVELS 1
ADDING LEMMAS AT LEVEL Not(INV#level_1!13)
	 1 Or(Not(INV__tr1), Not(vsolver#1), 1/8 <= INV_0_0)
LEN SELF._LEVELS 1
	 1 Or(Not(INV__tr1), 0 <= INV_3_0, Not(vsolver#1))
LEN SELF._LEVELS 2
	 1 Or(Not(INV__tr1), Not(vsolver#1), 1/16 <= INV_4_0)
LEN SELF._LEVELS 2
	 1 Or(Not(INV__tr1), Not(vsolver#1), 1/32 <= INV_2_0)
LEN SELF._LEVELS 2
	 1 Or(Not(INV__tr1), Not(vsolver#1), INV_5_0 <= -1/32)
LEN SELF._LEVELS 2
	 1 Or(Not(INV__tr1), Not(vsolver#1), INV_6_0 <= -1/32)
LEN SELF._LEVELS 2
	 1 Or(Not(INV__tr1), Not(vsolver#1), Not(INV_1_0 <= 0))
LEN SELF._LEVELS 2
	 1 Or(Not(INV__tr1), Not(vsolver#1), INV_3_0 <= 0)
LEN SELF._LEVELS 2
	 1 Or(Not(vsolver#1), 9/1024 <= INV_0_n)
LEN SELF._LEVELS 2
	 1 Or(Not(vsolver#1), 1/16 <= INV_4_n)
LEN SELF._LEVELS 2
	 1 Or(Not(vsolver#1), Not(0 <= INV_6_n), Not(INV_1_n <= 1/16))
LEN SELF._LEVELS 2
	 1 Or(Not(vsolver#1),
   -1539245/74852864 <=
   1670208/1608167*INV_0_n +
   296992/146197*INV_1_n +
   144192/1608167*INV_2_n +
   -288384/146197*INV_3_n +
   865152/1608167*INV_4_n +
   4063328/1608167*INV_5_n)
LEN SELF._LEVELS 2
	 1 Or(Not(vsolver#1),
   Not(INV_2_n <= 1/32),
   6052119/23087272448 <=
   5531171/45092329*INV_0_n +
   66452116/45092329*INV_1_n +
   -84233606/45092329*INV_4_n +
   -101062637/90184658*INV_5_n +
   -108019241/90184658*INV_6_n)
LEN SELF._LEVELS 2
	 1 Or(Not(vsolver#1),
   Not(INV_2_n <= 1/32),
   2375274874546603/321791473274742504 <=
   13319516046752/46394387727039*INV_0_n +
   2853684724854016/13407978053114271*INV_4_n +
   -1426842362427008/2366113774078989*INV_5_n)
LEN SELF._LEVELS 2
	 1 Or(Not(vsolver#1),
   Not(INV_3_n <= 0),
   22143/58120 <=
   3104/1453*INV_0_n +
   23424/1453*INV_1_n +
   3904/7265*INV_2_n +
   23424/7265*INV_4_n +
   -66368/7265*INV_5_n)
LEN SELF._LEVELS 2
	 1 Or(Not(vsolver#1),
   Not(INV_1_n <= 0),
   Not(-1/32 <= INV_5_n),
   30851/71680 <=
   14/3*INV_0_n +
   -5279/560*INV_2_n +
   -22/3*INV_3_n +
   2*INV_4_n +
   -17/3*INV_5_n)
LEN SELF._LEVELS 2
	 1 Or(Not(vsolver#1),
   Not(3040/1639*INV_0_n +
       6720/1639*INV_1_n +
       224/1639*INV_2_n +
       -448/149*INV_3_n +
       1344/1639*INV_4_n +
       -3808/1639*INV_5_n <=
       14379/52448))
LEN SELF._LEVELS 2
	 1 Or(Not(vsolver#1),
   22143/58120 <=
   3104/1453*INV_0_n +
   23424/1453*INV_1_n +
   3904/7265*INV_2_n +
   23424/7265*INV_4_n +
   -66368/7265*INV_5_n +
   -11712/7265*INV_6_n)
LEN SELF._LEVELS 2
	 1 Or(Not(vsolver#1),
   1/32 <= INV_2_n,
   Not(-1/32 <= INV_5_n),
   Not(-1/32 <= INV_6_n),
   INV_3_n <= -8581/413696)
LEN SELF._LEVELS 2
	 1 Or(Not(vsolver#1),
   -3/32 <=
   14/3*INV_0_n + 1/3*INV_2_n + 2*INV_4_n + -1*INV_6_n)
LEN SELF._LEVELS 2
	 1 Or(Not(vsolver#1),
   Not(6447872/4328709*INV_0_n +
       124480/29447*INV_1_n +
       12448/88341*INV_2_n +
       -24896/8031*INV_3_n +
       24896/29447*INV_4_n +
       -211616/88341*INV_5_n +
       -12448/29447*INV_6_n <=
       12212637/46172896))
LEN SELF._LEVELS 2
	 1 Or(Not(vsolver#1),
   INV_6_n <= -1/32,
   1002661/1607424 <=
   1208/819*INV_0_n +
   8720/2093*INV_1_n +
   872/6279*INV_2_n +
   -19184/6279*INV_3_n +
   1744/2093*INV_4_n +
   73316/18837*INV_5_n +
   -872/2093*INV_6_n)
LEN SELF._LEVELS 2
	 1 Or(Not(vsolver#1),
   Not(-1/32 <= INV_6_n),
   Not(132986470248824221/97133831478247424 <=
       27871387/15636334*INV_0_n +
       40068087/15636334*INV_1_n +
       34970519/15636334*INV_2_n +
       -1*INV_3_n +
       -68234697/15636334*INV_4_n +
       709356/7818167*INV_5_n +
       -1107531254005/29349398918*INV_6_n))
LEN SELF._LEVELS 2
	 1 Or(Not(vsolver#1),
   INV_5_n <= -1/32,
   Not(-40439549759/467095155712 <=
       3307952/4516313*INV_0_n +
       7231248/4516313*INV_1_n +
       4468304/4516313*INV_2_n +
       -17103120/4516313*INV_4_n +
       846528/4516313*INV_5_n))
LEN SELF._LEVELS 2
	 1 Or(Not(vsolver#1),
   0 <= INV_3_n,
   Not(170108887040/60769281891*INV_0_n +
       426858197056/60769281891*INV_1_n +
       -202655150656/60769281891*INV_2_n +
       43647982912/20256427297*INV_4_n +
       -123631892992/20256427297*INV_5_n +
       -313218848/698497493*INV_6_n <=
       -10631767796360771/18533172513989616))
LEN SELF._LEVELS 2
	 1 Or(Not(vsolver#1),
   Not(INV_3_n <= 0),
   Not(44779467009815633801/244268450941563633664 <=
       23947754379766/36903373936049*INV_0_n +
       9826941397511/36903373936049*INV_1_n +
       84060663342481/36903373936049*INV_2_n +
       -73081168143620/36903373936049*INV_4_n +
       -3891423128311/73806747872098*INV_5_n +
       7152959504621/36903373936049*INV_6_n))
LEN SELF._LEVELS 2
	 1 Or(Not(vsolver#1),
   Not(271/48*INV_0_n +
       205/96*INV_1_n +
       35/96*INV_2_n +
       -129/16*INV_3_n +
       197/24*INV_4_n +
       -505/96*INV_5_n +
       -677/96*INV_6_n <=
       104189663/370671616))
LEN SELF._LEVELS 2
	 1 Or(Not(vsolver#1),
   Not(542/677*INV_0_n +
       205/677*INV_1_n +
       35/677*INV_2_n +
       -774/677*INV_3_n +
       788/677*INV_4_n +
       -505/677*INV_5_n <=
       67505821/7842021376),
   Not(528630447181728/16814334947147*INV_0_n +
       61874040105520/16814334947147*INV_1_n +
       9267855103568/16814334947147*INV_2_n +
       -294524483377440/16814334947147*INV_3_n +
       195501597200320/16814334947147*INV_4_n +
       -93237169166832/16814334947147*INV_5_n <=
       8604926976452329/7532822056321856))
LEN SELF._LEVELS 2
	 1 Or(Not(vsolver#1),
   244989002071023000349/542399860390924976760 <=
   711493636259058495296/67799982548865622095*INV_0_n +
   113383917710330831744/13559996509773124419*INV_1_n +
   11149166117878512256/13559996509773124419*INV_2_n +
   -78816299639465138368/7533331394318402455*INV_3_n +
   481436760504196159664/67799982548865622095*INV_4_n +
   -498275735658055498976/67799982548865622095*INV_6_n)
LEN SELF._LEVELS 2
ADDING LEMMAS AT LEVEL Not(INV#level_2!14)
	 2 Or(Not(INV__tr1), Not(vsolver#1), 9/1024 <= INV_0_0)
LEN SELF._LEVELS 2
	 2 Or(Not(INV__tr1), Not(vsolver#1), 1/16 <= INV_4_0)
LEN SELF._LEVELS 3
	 2 Or(Not(INV__tr1),
   Not(vsolver#1),
   Not(0 <= INV_6_0),
   Not(INV_1_0 <= 1/16))
LEN SELF._LEVELS 3
	 2 Or(Not(INV__tr1),
   Not(vsolver#1),
   -1539245/74852864 <=
   1670208/1608167*INV_0_0 +
   296992/146197*INV_1_0 +
   -288384/146197*INV_3_0 +
   144192/1608167*INV_2_0 +
   865152/1608167*INV_4_0 +
   4063328/1608167*INV_5_0)
LEN SELF._LEVELS 3
	 2 Or(Not(INV__tr1),
   Not(vsolver#1),
   Not(INV_2_0 <= 1/32),
   6052119/23087272448 <=
   5531171/45092329*INV_0_0 +
   66452116/45092329*INV_1_0 +
   -84233606/45092329*INV_4_0 +
   -101062637/90184658*INV_5_0 +
   -108019241/90184658*INV_6_0)
LEN SELF._LEVELS 3
	 2 Or(Not(INV__tr1),
   Not(vsolver#1),
   Not(INV_2_0 <= 1/32),
   2375274874546603/321791473274742504 <=
   13319516046752/46394387727039*INV_0_0 +
   2853684724854016/13407978053114271*INV_4_0 +
   -1426842362427008/2366113774078989*INV_5_0)
LEN SELF._LEVELS 3
	 2 Or(Not(INV__tr1),
   Not(vsolver#1),
   Not(INV_3_0 <= 0),
   22143/58120 <=
   3104/1453*INV_0_0 +
   23424/1453*INV_1_0 +
   3904/7265*INV_2_0 +
   23424/7265*INV_4_0 +
   -66368/7265*INV_5_0)
LEN SELF._LEVELS 3
	 2 Or(Not(INV__tr1),
   Not(vsolver#1),
   Not(INV_1_0 <= 0),
   Not(-1/32 <= INV_5_0),
   30851/71680 <=
   14/3*INV_0_0 +
   -22/3*INV_3_0 +
   -5279/560*INV_2_0 +
   2*INV_4_0 +
   -17/3*INV_5_0)
LEN SELF._LEVELS 3
	 2 Or(Not(INV__tr1),
   Not(vsolver#1),
   Not(3040/1639*INV_0_0 +
       6720/1639*INV_1_0 +
       -448/149*INV_3_0 +
       224/1639*INV_2_0 +
       1344/1639*INV_4_0 +
       -3808/1639*INV_5_0 <=
       14379/52448))
LEN SELF._LEVELS 3
	 2 Or(Not(INV__tr1),
   Not(vsolver#1),
   22143/58120 <=
   3104/1453*INV_0_0 +
   23424/1453*INV_1_0 +
   3904/7265*INV_2_0 +
   23424/7265*INV_4_0 +
   -66368/7265*INV_5_0 +
   -11712/7265*INV_6_0)
LEN SELF._LEVELS 3
	 2 Or(Not(INV__tr1),
   Not(vsolver#1),
   1/32 <= INV_2_0,
   Not(-1/32 <= INV_5_0),
   Not(-1/32 <= INV_6_0),
   INV_3_0 <= -8581/413696)
LEN SELF._LEVELS 3
	 2 Or(Not(INV__tr1),
   Not(vsolver#1),
   -3/32 <=
   14/3*INV_0_0 + 1/3*INV_2_0 + 2*INV_4_0 + -1*INV_6_0)
LEN SELF._LEVELS 3
	 2 Or(Not(INV__tr1),
   Not(vsolver#1),
   Not(6447872/4328709*INV_0_0 +
       124480/29447*INV_1_0 +
       -24896/8031*INV_3_0 +
       12448/88341*INV_2_0 +
       24896/29447*INV_4_0 +
       -211616/88341*INV_5_0 +
       -12448/29447*INV_6_0 <=
       12212637/46172896))
LEN SELF._LEVELS 3
	 2 Or(Not(INV__tr1),
   Not(vsolver#1),
   INV_6_0 <= -1/32,
   1002661/1607424 <=
   1208/819*INV_0_0 +
   8720/2093*INV_1_0 +
   -19184/6279*INV_3_0 +
   872/6279*INV_2_0 +
   1744/2093*INV_4_0 +
   73316/18837*INV_5_0 +
   -872/2093*INV_6_0)
LEN SELF._LEVELS 3
	 2 Or(0 <= INV_0_n, Not(vsolver#1))
LEN SELF._LEVELS 3
	 2 Or(Not(vsolver#1), 9/1024 <= INV_0_n)
LEN SELF._LEVELS 3
	 2 Or(Not(vsolver#1),
   1/32 <= INV_2_n,
   INV_3_n <= -8581/413696,
   Not(-2848567/9689536 <=
       22976/4497*INV_1_n + -30848/4497*INV_4_n))
LEN SELF._LEVELS 3
	 2 Or(Not(vsolver#1),
   0 <= INV_3_n,
   Not(INV_6_n <= 0),
   70211/2130688 <=
   2308/1189*INV_0_n +
   34620/8323*INV_1_n +
   1154/8323*INV_2_n +
   6924/8323*INV_4_n +
   -19618/8323*INV_5_n +
   INV_6_n)
LEN SELF._LEVELS 3
	 2 Or(Not(INV__tr1),
   Not(vsolver#1),
   Not(-1/32 <= INV_6_0),
   Not(132986470248824221/97133831478247424 <=
       27871387/15636334*INV_0_0 +
       40068087/15636334*INV_1_0 +
       -1*INV_3_0 +
       34970519/15636334*INV_2_0 +
       -68234697/15636334*INV_4_0 +
       709356/7818167*INV_5_0 +
       -1107531254005/29349398918*INV_6_0))
LEN SELF._LEVELS 3
	 2 Or(Not(INV__tr1),
   Not(vsolver#1),
   INV_5_0 <= -1/32,
   Not(-40439549759/467095155712 <=
       3307952/4516313*INV_0_0 +
       7231248/4516313*INV_1_0 +
       4468304/4516313*INV_2_0 +
       -17103120/4516313*INV_4_0 +
       846528/4516313*INV_5_0))
LEN SELF._LEVELS 3
	 2 Or(Not(vsolver#1),
   1/32 <= INV_2_n,
   -3/32 <=
   14/3*INV_0_n +
   1/3*INV_2_n +
   -22/3*INV_3_n +
   2*INV_4_n +
   -17/3*INV_5_n,
   Not(INV_6_n <= 0))
LEN SELF._LEVELS 3
	 2 Or(Not(INV__tr1),
   0 <= INV_3_0,
   Not(vsolver#1),
   Not(170108887040/60769281891*INV_0_0 +
       426858197056/60769281891*INV_1_0 +
       -202655150656/60769281891*INV_2_0 +
       43647982912/20256427297*INV_4_0 +
       -123631892992/20256427297*INV_5_0 +
       -313218848/698497493*INV_6_0 <=
       -10631767796360771/18533172513989616))
LEN SELF._LEVELS 3
	 2 Or(Not(INV__tr1),
   Not(vsolver#1),
   Not(INV_3_0 <= 0),
   Not(44779467009815633801/244268450941563633664 <=
       23947754379766/36903373936049*INV_0_0 +
       9826941397511/36903373936049*INV_1_0 +
       84060663342481/36903373936049*INV_2_0 +
       -73081168143620/36903373936049*INV_4_0 +
       -3891423128311/73806747872098*INV_5_0 +
       7152959504621/36903373936049*INV_6_0))
LEN SELF._LEVELS 3
	 2 Or(Not(INV__tr1),
   Not(vsolver#1),
   Not(271/48*INV_0_0 +
       205/96*INV_1_0 +
       -129/16*INV_3_0 +
       35/96*INV_2_0 +
       197/24*INV_4_0 +
       -505/96*INV_5_0 +
       -677/96*INV_6_0 <=
       104189663/370671616))
LEN SELF._LEVELS 3
	 2 Or(Not(INV__tr1),
   Not(vsolver#1),
   Not(542/677*INV_0_0 +
       205/677*INV_1_0 +
       -774/677*INV_3_0 +
       35/677*INV_2_0 +
       788/677*INV_4_0 +
       -505/677*INV_5_0 <=
       67505821/7842021376),
   Not(528630447181728/16814334947147*INV_0_0 +
       61874040105520/16814334947147*INV_1_0 +
       -294524483377440/16814334947147*INV_3_0 +
       9267855103568/16814334947147*INV_2_0 +
       195501597200320/16814334947147*INV_4_0 +
       -93237169166832/16814334947147*INV_5_0 <=
       8604926976452329/7532822056321856))
LEN SELF._LEVELS 3
	 2 Or(Not(INV__tr1),
   Not(vsolver#1),
   244989002071023000349/542399860390924976760 <=
   711493636259058495296/67799982548865622095*INV_0_0 +
   113383917710330831744/13559996509773124419*INV_1_0 +
   -78816299639465138368/7533331394318402455*INV_3_0 +
   11149166117878512256/13559996509773124419*INV_2_0 +
   481436760504196159664/67799982548865622095*INV_4_0 +
   -498275735658055498976/67799982548865622095*INV_6_0)
LEN SELF._LEVELS 3
	 2 Or(Not(vsolver#1),
   1/32 <= INV_2_n,
   -3/32 <=
   14/3*INV_0_n +
   10*INV_1_n +
   1/3*INV_2_n +
   -22/3*INV_3_n +
   2*INV_4_n +
   -1*INV_6_n,
   Not(14/3*INV_0_n +
       10*INV_1_n +
       -22/3*INV_3_n +
       2*INV_4_n +
       -1*INV_6_n <=
       135320287/370671616),
   Not(139504117760/20256427297*INV_0_n +
       -179080057856/60769281891*INV_1_n +
       -219220756480/20256427297*INV_3_n +
       59787479040/20256427297*INV_4_n +
       -29893739520/20256427297*INV_6_n <=
       -1345986262550339/18533172513989616),
   Not(18819010378112/3891423128311*INV_0_n +
       40326450810240/3891423128311*INV_1_n +
       -481816895582848/3891423128311*INV_3_n +
       8065290162048/3891423128311*INV_4_n +
       -4032645081024/3891423128311*INV_6_n <=
       23595381479309449335/12878929459917979648),
   Not(-19944437/1272205312 <=
       248741/621194*INV_1_n + -1*INV_5_n),
   Not(14/3*INV_0_n +
       10*INV_1_n +
       -22/3*INV_3_n +
       2*INV_4_n +
       553502307212/97092278673*INV_5_n +
       -1*INV_6_n <=
       8192160616245065/22270638512898048))
LEN SELF._LEVELS 3
ADDING LEMMAS AT LEVEL Not(INV#level_3!16)
	 3 Or(Not(INV__tr1), 0 <= INV_0_0, Not(vsolver#1))
LEN SELF._LEVELS 3
	 3 Or(Not(INV__tr1), Not(vsolver#1), 9/1024 <= INV_0_0)
LEN SELF._LEVELS 4
	 3 Or(Not(INV__tr1),
   Not(vsolver#1),
   1/32 <= INV_2_0,
   INV_3_0 <= -8581/413696,
   Not(-2848567/9689536 <=
       22976/4497*INV_1_0 + -30848/4497*INV_4_0))
LEN SELF._LEVELS 4
	 3 Or(Not(INV__tr1),
   0 <= INV_3_0,
   Not(vsolver#1),
   Not(INV_6_0 <= 0),
   70211/2130688 <=
   2308/1189*INV_0_0 +
   34620/8323*INV_1_0 +
   1154/8323*INV_2_0 +
   6924/8323*INV_4_0 +
   -19618/8323*INV_5_0 +
   INV_6_0)
LEN SELF._LEVELS 4
	 3 Or(Not(INV__tr1),
   Not(vsolver#1),
   1/32 <= INV_2_0,
   Not(INV_6_0 <= 0),
   -3/32 <=
   14/3*INV_0_0 +
   -22/3*INV_3_0 +
   1/3*INV_2_0 +
   2*INV_4_0 +
   -17/3*INV_5_0)
LEN SELF._LEVELS 4
	 3 Or(Not(INV__tr1),
   Not(vsolver#1),
   1/32 <= INV_2_0,
   Not(139504117760/20256427297*INV_0_0 +
       -179080057856/60769281891*INV_1_0 +
       -219220756480/20256427297*INV_3_0 +
       59787479040/20256427297*INV_4_0 +
       -29893739520/20256427297*INV_6_0 <=
       -1345986262550339/18533172513989616),
   Not(-19944437/1272205312 <=
       248741/621194*INV_1_0 + -1*INV_5_0),
   Not(14/3*INV_0_0 +
       10*INV_1_0 +
       -22/3*INV_3_0 +
       2*INV_4_0 +
       -1*INV_6_0 <=
       135320287/370671616),
   -3/32 <=
   14/3*INV_0_0 +
   10*INV_1_0 +
   -22/3*INV_3_0 +
   1/3*INV_2_0 +
   2*INV_4_0 +
   -1*INV_6_0,
   Not(14/3*INV_0_0 +
       10*INV_1_0 +
       -22/3*INV_3_0 +
       2*INV_4_0 +
       553502307212/97092278673*INV_5_0 +
       -1*INV_6_0 <=
       8192160616245065/22270638512898048),
   Not(18819010378112/3891423128311*INV_0_0 +
       40326450810240/3891423128311*INV_1_0 +
       -481816895582848/3891423128311*INV_3_0 +
       8065290162048/3891423128311*INV_4_0 +
       -4032645081024/3891423128311*INV_6_0 <=
       23595381479309449335/12878929459917979648))
LEN SELF._LEVELS 4
checking inductive for cube: [INV_3_n == 0, INV_6_n <= 0, Not(549695/272967*INV_5_n +
    -452690/272967*INV_0_n +
    -64670/90989*INV_4_n +
    -32335/272967*INV_2_n +
    -232361/90989*INV_1_n <=
    9858161/419277312), Not(19618/8323*INV_5_n +
    -2308/1189*INV_0_n +
    -34620/8323*INV_1_n +
    -6924/8323*INV_4_n +
    -1154/8323*INV_2_n +
    -1*INV_6_n <=
    -70211/2130688)]
CUBE_LITS:
spacer_proxy!#274 : INV_3_n == 0
spacer_proxy!#275 : INV_6_n <= 0
spacer_proxy!#276 : Not(549695/272967*INV_5_n +
    -452690/272967*INV_0_n +
    -64670/90989*INV_4_n +
    -32335/272967*INV_2_n +
    -232361/90989*INV_1_n <=
    9858161/419277312)
spacer_proxy!#277 : Not(19618/8323*INV_5_n +
    -2308/1189*INV_0_n +
    -34620/8323*INV_1_n +
    -6924/8323*INV_4_n +
    -1154/8323*INV_2_n +
    -1*INV_6_n <=
    -70211/2130688)
PRE_LEMMA_LIT:
spacer_proxy!#273 : Or(Not(INV_3_0 == 0),
   Not(INV_6_0 <= 0),
   549695/272967*INV_5_0 +
   -452690/272967*INV_0_0 +
   -64670/90989*INV_4_0 +
   -32335/272967*INV_2_0 +
   -232361/90989*INV_1_0 <=
   9858161/419277312,
   19618/8323*INV_5_0 +
   -2308/1189*INV_0_0 +
   -34620/8323*INV_1_0 +
   -6924/8323*INV_4_0 +
   -1154/8323*INV_2_0 +
   -1*INV_6_0 <=
   -70211/2130688)
SELF.LEVELS [Not(level#0), Not(level#1), Not(level#2), Not(level#3)]
2
DISABLE level 0
DISABLE level 1
ACTIVATE level 2
ASSUMPTIONs:
 [level#0, level#1, Not(level#2), vsolver#1, Not(INV_ext0_n), spacer_proxy!#273, spacer_proxy!#274, spacer_proxy!#275, spacer_proxy!#276, spacer_proxy!#277]
DROP SUCCESSFUL. New cube is:
[INV_3_n == 0, INV_6_n <= 0, Not(549695/272967*INV_5_n +
    -452690/272967*INV_0_n +
    -64670/90989*INV_4_n +
    -32335/272967*INV_2_n +
    -232361/90989*INV_1_n <=
    9858161/419277312), Not(19618/8323*INV_5_n +
    -2308/1189*INV_0_n +
    -34620/8323*INV_1_n +
    -6924/8323*INV_4_n +
    -1154/8323*INV_2_n +
    -1*INV_6_n <=
    -70211/2130688)]
UNSAT CORE:
 [vsolver#1,
 Not(level#2),
 spacer_proxy!#274,
 spacer_proxy!#275,
 spacer_proxy!#276,
 Not(INV_ext0_n)]
checking inductive for cube: [INV_6_n <= 0, Not(549695/272967*INV_5_n +
    -452690/272967*INV_0_n +
    -64670/90989*INV_4_n +
    -32335/272967*INV_2_n +
    -232361/90989*INV_1_n <=
    9858161/419277312), Not(19618/8323*INV_5_n +
    -2308/1189*INV_0_n +
    -34620/8323*INV_1_n +
    -6924/8323*INV_4_n +
    -1154/8323*INV_2_n +
    -1*INV_6_n <=
    -70211/2130688)]
CUBE_LITS:
spacer_proxy!#275 : INV_6_n <= 0
spacer_proxy!#276 : Not(549695/272967*INV_5_n +
    -452690/272967*INV_0_n +
    -64670/90989*INV_4_n +
    -32335/272967*INV_2_n +
    -232361/90989*INV_1_n <=
    9858161/419277312)
spacer_proxy!#277 : Not(19618/8323*INV_5_n +
    -2308/1189*INV_0_n +
    -34620/8323*INV_1_n +
    -6924/8323*INV_4_n +
    -1154/8323*INV_2_n +
    -1*INV_6_n <=
    -70211/2130688)
PRE_LEMMA_LIT:
spacer_proxy!#278 : Or(Not(INV_6_0 <= 0),
   549695/272967*INV_5_0 +
   -452690/272967*INV_0_0 +
   -64670/90989*INV_4_0 +
   -32335/272967*INV_2_0 +
   -232361/90989*INV_1_0 <=
   9858161/419277312,
   19618/8323*INV_5_0 +
   -2308/1189*INV_0_0 +
   -34620/8323*INV_1_0 +
   -6924/8323*INV_4_0 +
   -1154/8323*INV_2_0 +
   -1*INV_6_0 <=
   -70211/2130688)
SELF.LEVELS [Not(level#0), Not(level#1), Not(level#2), Not(level#3)]
2
DISABLE level 0
DISABLE level 1
ACTIVATE level 2
ASSUMPTIONs:
 [level#0, level#1, Not(level#2), vsolver#1, Not(INV_ext0_n), spacer_proxy!#278, spacer_proxy!#275, spacer_proxy!#276, spacer_proxy!#277]
DROP FAILED
WAS CHECKING:
 [Or(Not(INV__tr1),
    Not(vsolver#1),
    Not(Or(Not(And(Or(Not(0 <= INV_0_0), aux!9_n == INV_0_0),
                   Or(0 <= INV_0_0, aux!9_n == 0))),
           Not(And(Or(Not(0 <= INV_1_0), aux!8_n == INV_1_0),
                   Or(0 <= INV_1_0, aux!8_n == 0))),
           Not(And(Or(Not(0 <= INV_2_0), aux!7_n == INV_2_0),
                   Or(0 <= INV_2_0, aux!7_n == 0))),
           Not(And(Or(Not(0 <= INV_4_0), aux!5_n == INV_4_0),
                   Or(0 <= INV_4_0, aux!5_n == 0))),
           Not(And(Or(Not(0 <= INV_3_0), aux!6_n == INV_3_0),
                   Or(0 <= INV_3_0, aux!6_n == 0))),
           Not(And(Or(Not(0 <= INV_5_0), aux!4_n == INV_5_0),
                   Or(0 <= INV_5_0, aux!4_n == 0))),
           Not(And(Or(Not(0 <= INV_6_0), aux!3_n == INV_6_0),
                   Or(0 <= INV_6_0, aux!3_n == 0))),
           Not(INV_0_n +
               -3/32*aux!2_n +
               3/32*aux!3_n +
               17/32*aux!4_n +
               -3/16*aux!5_n +
               11/16*aux!6_n +
               -1/32*aux!7_n +
               -15/16*aux!8_n +
               -7/16*aux!9_n ==
               0),
           Not(INV_1_n +
               1/32*aux!2_n +
               9/16*aux!3_n +
               3/32*aux!4_n +
               -9/16*aux!5_n +
               11/32*aux!6_n +
               -7/32*aux!7_n +
               7/32*aux!8_n +
               -5/16*aux!9_n ==
               0),
           Not(INV_2_n +
               1/32*aux!3_n +
               -1/4*aux!4_n +
               19/32*aux!5_n +
               -23/32*aux!6_n +
               -13/16*aux!7_n +
               5/16*aux!8_n +
               -3/8*aux!9_n ==
               1/32),
           Not(INV_3_n +
               1/8*aux!2_n +
               1/32*aux!3_n +
               -3/32*aux!4_n +
               1/4*aux!5_n +
               -13/32*aux!6_n +
               -3/8*aux!7_n +
               -1/16*aux!8_n +
               -5/32*aux!9_n ==
               -1/32),
           Not(INV_4_n +
               -1/16*aux!2_n +
               5/16*aux!3_n +
               -7/32*aux!5_n +
               -3/8*aux!6_n +
               -1/2*aux!7_n +
               -1/32*aux!8_n +
               -7/16*aux!9_n ==
               0),
           Not(INV_5_n +
               -1/16*aux!2_n +
               21/32*aux!3_n +
               -19/32*aux!4_n +
               3/4*aux!5_n +
               -3/8*aux!6_n +
               1/32*aux!7_n +
               5/32*aux!8_n +
               -7/8*aux!9_n ==
               -1/16),
           Not(INV_6_n +
               -1/32*aux!2_n +
               -19/32*aux!3_n +
               -37/32*aux!4_n +
               -9/16*aux!5_n +
               13/16*aux!6_n +
               -7/32*aux!7_n +
               11/32*aux!8_n +
               3/4*aux!9_n ==
               1/32),
           Not(3/32 <= aux!2_n),
           Not(aux!2_n <= 1/8)))),
 Or(Not(INV__tr0),
    Not(vsolver#1),
    Not(Or(Not(INV_0_n == 1/8),
           Not(INV_1_n == 1/16),
           Not(INV_2_n == 1/32),
           Not(INV_3_n == 0),
           Not(INV_4_n == 1/16),
           Not(INV_5_n == -1/32),
           Not(INV_6_n == -1/32)))),
 Or(Not(INV__tr1),
    INV#reach_tag_0_0,
    Not(Or(Not(INV_0_0 == 1/8),
           Not(INV_1_0 == 1/16),
           Not(INV_2_0 == 1/32),
           Not(INV_3_0 == 0),
           Not(INV_4_0 == 1/16),
           Not(INV_5_0 == -1/32),
           Not(INV_6_0 == -1/32))),
    Not(vsolver#1)),
 Or(INV_ext0_n, INV__tr0, INV__tr1),
 Implies(Not(level#0), Or(Not(INV__tr1), Not(vsolver#1))),
 Implies(Not(level#0), Or(Not(vsolver#1), 1/8 <= INV_0_n)),
 Implies(Not(level#0), Or(Not(vsolver#1), 0 <= INV_3_n)),
 Implies(Not(level#0), Or(Not(vsolver#1), 1/16 <= INV_4_n)),
 Implies(Not(level#0), Or(Not(vsolver#1), 1/32 <= INV_2_n)),
 Implies(Not(level#0), Or(Not(vsolver#1), INV_5_n <= -1/32)),
 Implies(Not(level#0), Or(Not(vsolver#1), INV_6_n <= -1/32)),
 Implies(Not(level#0),
         Or(Not(vsolver#1), Not(INV_1_n <= 0))),
 Implies(Not(level#0), Or(Not(vsolver#1), INV_3_n <= 0)),
 Implies(Not(level#1),
         Or(Not(INV__tr1), Not(vsolver#1), 1/8 <= INV_0_0)),
 Implies(Not(level#1),
         Or(Not(INV__tr1), 0 <= INV_3_0, Not(vsolver#1))),
 Implies(Not(level#1),
         Or(Not(INV__tr1), Not(vsolver#1), 1/16 <= INV_4_0)),
 Implies(Not(level#1),
         Or(Not(INV__tr1), Not(vsolver#1), 1/32 <= INV_2_0)),
 Implies(Not(level#1),
         Or(Not(INV__tr1), Not(vsolver#1), INV_5_0 <= -1/32)),
 Implies(Not(level#1),
         Or(Not(INV__tr1), Not(vsolver#1), INV_6_0 <= -1/32)),
 Implies(Not(level#1),
         Or(Not(INV__tr1),
            Not(vsolver#1),
            Not(INV_1_0 <= 0))),
 Implies(Not(level#1),
         Or(Not(INV__tr1), Not(vsolver#1), INV_3_0 <= 0)),
 Implies(Not(level#1),
         Or(Not(vsolver#1), 9/1024 <= INV_0_n)),
 Implies(Not(level#1), Or(Not(vsolver#1), 1/16 <= INV_4_n)),
 Implies(Not(level#1),
         Or(Not(vsolver#1),
            Not(0 <= INV_6_n),
            Not(INV_1_n <= 1/16))),
 Implies(Not(level#1),
         Or(Not(vsolver#1),
            -1539245/74852864 <=
            1670208/1608167*INV_0_n +
            296992/146197*INV_1_n +
            144192/1608167*INV_2_n +
            -288384/146197*INV_3_n +
            865152/1608167*INV_4_n +
            4063328/1608167*INV_5_n)),
 Implies(Not(level#1),
         Or(Not(vsolver#1),
            Not(INV_2_n <= 1/32),
            6052119/23087272448 <=
            5531171/45092329*INV_0_n +
            66452116/45092329*INV_1_n +
            -84233606/45092329*INV_4_n +
            -101062637/90184658*INV_5_n +
            -108019241/90184658*INV_6_n)),
 Implies(Not(level#1),
         Or(Not(vsolver#1),
            Not(INV_2_n <= 1/32),
            2375274874546603/321791473274742504 <=
            13319516046752/46394387727039*INV_0_n +
            2853684724854016/13407978053114271*INV_4_n +
            -1426842362427008/2366113774078989*INV_5_n)),
 Implies(Not(level#1),
         Or(Not(vsolver#1),
            Not(INV_3_n <= 0),
            22143/58120 <=
            3104/1453*INV_0_n +
            23424/1453*INV_1_n +
            3904/7265*INV_2_n +
            23424/7265*INV_4_n +
            -66368/7265*INV_5_n)),
 Implies(Not(level#1),
         Or(Not(vsolver#1),
            Not(INV_1_n <= 0),
            Not(-1/32 <= INV_5_n),
            30851/71680 <=
            14/3*INV_0_n +
            -5279/560*INV_2_n +
            -22/3*INV_3_n +
            2*INV_4_n +
            -17/3*INV_5_n)),
 Implies(Not(level#1),
         Or(Not(vsolver#1),
            Not(3040/1639*INV_0_n +
                6720/1639*INV_1_n +
                224/1639*INV_2_n +
                -448/149*INV_3_n +
                1344/1639*INV_4_n +
                -3808/1639*INV_5_n <=
                14379/52448))),
 Implies(Not(level#1),
         Or(Not(vsolver#1),
            22143/58120 <=
            3104/1453*INV_0_n +
            23424/1453*INV_1_n +
            3904/7265*INV_2_n +
...
MODEL: [INV_5_n = -243352735447326078115707445619/2087750527150374519747379200,
 INV_5_0 = -221523407603961686337994104101/456695427814144426194739200,
 INV_6_0 = 142918808189435358634605906187/152231809271381475398246400,
 INV_ext0_n = False,
 level#0 = True,
 spacer_proxy!#274 = False,
 INV_1_0 = 52317759546889844018470086077/152231809271381475398246400,
 INV__tr1 = True,
 spacer_proxy!#277 = True,
 spacer_proxy!#276 = True,
 aux!4_n = 0,
 INV_6_n = -4085509801139533168279721928611/87685522140315729829389926400,
 aux!7_n = 0,
 INV_2_n = 19867603504405732177800878328817/175371044280631459658779852800,
 INV_4_n = -15/16,
 aux!5_n = 17/16,
 INV_0_n = 43036381475691911554696120016921/87685522140315729829389926400,
 spacer_proxy!#275 = True,
 aux!2_n = 3/32,
 INV_4_0 = 17/16,
 INV__tr0 = False,
 aux!3_n = 142918808189435358634605906187/152231809271381475398246400,
 aux!6_n = 25839989652620311761332930791/1096069026753946622867374080,
 level#2 = False,
 INV_0_0 = 35573462975962343608397546527/57086928476768053274342400,
 level#1 = True,
 spacer_proxy!#278 = True,
 INV_1_n = -14592368053642713027471706372673/35074208856126291931755970560,
 level#3 = True,
 INV_2_0 = -1,
 INV_3_0 = 25839989652620311761332930791/1096069026753946622867374080,
 aux!8_n = 52317759546889844018470086077/152231809271381475398246400,
 INV#reach_tag_0_0 = True,
 aux!9_n = 35573462975962343608397546527/57086928476768053274342400,
 INV_3_n = 17322544740242664940497419813987/175371044280631459658779852800,
 vsolver#1 = True]
checking inductive for cube: [INV_3_n == 0, Not(549695/272967*INV_5_n +
    -452690/272967*INV_0_n +
    -64670/90989*INV_4_n +
    -32335/272967*INV_2_n +
    -232361/90989*INV_1_n <=
    9858161/419277312), Not(19618/8323*INV_5_n +
    -2308/1189*INV_0_n +
    -34620/8323*INV_1_n +
    -6924/8323*INV_4_n +
    -1154/8323*INV_2_n +
    -1*INV_6_n <=
    -70211/2130688)]
CUBE_LITS:
spacer_proxy!#274 : INV_3_n == 0
spacer_proxy!#276 : Not(549695/272967*INV_5_n +
    -452690/272967*INV_0_n +
    -64670/90989*INV_4_n +
    -32335/272967*INV_2_n +
    -232361/90989*INV_1_n <=
    9858161/419277312)
spacer_proxy!#277 : Not(19618/8323*INV_5_n +
    -2308/1189*INV_0_n +
    -34620/8323*INV_1_n +
    -6924/8323*INV_4_n +
    -1154/8323*INV_2_n +
    -1*INV_6_n <=
    -70211/2130688)
PRE_LEMMA_LIT:
spacer_proxy!#279 : Or(Not(INV_3_0 == 0),
   549695/272967*INV_5_0 +
   -452690/272967*INV_0_0 +
   -64670/90989*INV_4_0 +
   -32335/272967*INV_2_0 +
   -232361/90989*INV_1_0 <=
   9858161/419277312,
   19618/8323*INV_5_0 +
   -2308/1189*INV_0_0 +
   -34620/8323*INV_1_0 +
   -6924/8323*INV_4_0 +
   -1154/8323*INV_2_0 +
   -1*INV_6_0 <=
   -70211/2130688)
SELF.LEVELS [Not(level#0), Not(level#1), Not(level#2), Not(level#3)]
2
DISABLE level 0
DISABLE level 1
ACTIVATE level 2
ASSUMPTIONs:
 [level#0, level#1, Not(level#2), vsolver#1, Not(INV_ext0_n), spacer_proxy!#279, spacer_proxy!#274, spacer_proxy!#276, spacer_proxy!#277]
DROP FAILED
WAS CHECKING:
 [Or(Not(INV__tr1),
    Not(vsolver#1),
    Not(Or(Not(And(Or(Not(0 <= INV_0_0), aux!9_n == INV_0_0),
                   Or(0 <= INV_0_0, aux!9_n == 0))),
           Not(And(Or(Not(0 <= INV_1_0), aux!8_n == INV_1_0),
                   Or(0 <= INV_1_0, aux!8_n == 0))),
           Not(And(Or(Not(0 <= INV_2_0), aux!7_n == INV_2_0),
                   Or(0 <= INV_2_0, aux!7_n == 0))),
           Not(And(Or(Not(0 <= INV_4_0), aux!5_n == INV_4_0),
                   Or(0 <= INV_4_0, aux!5_n == 0))),
           Not(And(Or(Not(0 <= INV_3_0), aux!6_n == INV_3_0),
                   Or(0 <= INV_3_0, aux!6_n == 0))),
           Not(And(Or(Not(0 <= INV_5_0), aux!4_n == INV_5_0),
                   Or(0 <= INV_5_0, aux!4_n == 0))),
           Not(And(Or(Not(0 <= INV_6_0), aux!3_n == INV_6_0),
                   Or(0 <= INV_6_0, aux!3_n == 0))),
           Not(INV_0_n +
               -3/32*aux!2_n +
               3/32*aux!3_n +
               17/32*aux!4_n +
               -3/16*aux!5_n +
               11/16*aux!6_n +
               -1/32*aux!7_n +
               -15/16*aux!8_n +
               -7/16*aux!9_n ==
               0),
           Not(INV_1_n +
               1/32*aux!2_n +
               9/16*aux!3_n +
               3/32*aux!4_n +
               -9/16*aux!5_n +
               11/32*aux!6_n +
               -7/32*aux!7_n +
               7/32*aux!8_n +
               -5/16*aux!9_n ==
               0),
           Not(INV_2_n +
               1/32*aux!3_n +
               -1/4*aux!4_n +
               19/32*aux!5_n +
               -23/32*aux!6_n +
               -13/16*aux!7_n +
               5/16*aux!8_n +
               -3/8*aux!9_n ==
               1/32),
           Not(INV_3_n +
               1/8*aux!2_n +
               1/32*aux!3_n +
               -3/32*aux!4_n +
               1/4*aux!5_n +
               -13/32*aux!6_n +
               -3/8*aux!7_n +
               -1/16*aux!8_n +
               -5/32*aux!9_n ==
               -1/32),
           Not(INV_4_n +
               -1/16*aux!2_n +
               5/16*aux!3_n +
               -7/32*aux!5_n +
               -3/8*aux!6_n +
               -1/2*aux!7_n +
               -1/32*aux!8_n +
               -7/16*aux!9_n ==
               0),
           Not(INV_5_n +
               -1/16*aux!2_n +
               21/32*aux!3_n +
               -19/32*aux!4_n +
               3/4*aux!5_n +
               -3/8*aux!6_n +
               1/32*aux!7_n +
               5/32*aux!8_n +
               -7/8*aux!9_n ==
               -1/16),
           Not(INV_6_n +
               -1/32*aux!2_n +
               -19/32*aux!3_n +
               -37/32*aux!4_n +
               -9/16*aux!5_n +
               13/16*aux!6_n +
               -7/32*aux!7_n +
               11/32*aux!8_n +
               3/4*aux!9_n ==
               1/32),
           Not(3/32 <= aux!2_n),
           Not(aux!2_n <= 1/8)))),
 Or(Not(INV__tr0),
    Not(vsolver#1),
    Not(Or(Not(INV_0_n == 1/8),
           Not(INV_1_n == 1/16),
           Not(INV_2_n == 1/32),
           Not(INV_3_n == 0),
           Not(INV_4_n == 1/16),
           Not(INV_5_n == -1/32),
           Not(INV_6_n == -1/32)))),
 Or(Not(INV__tr1),
    INV#reach_tag_0_0,
    Not(Or(Not(INV_0_0 == 1/8),
           Not(INV_1_0 == 1/16),
           Not(INV_2_0 == 1/32),
           Not(INV_3_0 == 0),
           Not(INV_4_0 == 1/16),
           Not(INV_5_0 == -1/32),
           Not(INV_6_0 == -1/32))),
    Not(vsolver#1)),
 Or(INV_ext0_n, INV__tr0, INV__tr1),
 Implies(Not(level#0), Or(Not(INV__tr1), Not(vsolver#1))),
 Implies(Not(level#0), Or(Not(vsolver#1), 1/8 <= INV_0_n)),
 Implies(Not(level#0), Or(Not(vsolver#1), 0 <= INV_3_n)),
 Implies(Not(level#0), Or(Not(vsolver#1), 1/16 <= INV_4_n)),
 Implies(Not(level#0), Or(Not(vsolver#1), 1/32 <= INV_2_n)),
 Implies(Not(level#0), Or(Not(vsolver#1), INV_5_n <= -1/32)),
 Implies(Not(level#0), Or(Not(vsolver#1), INV_6_n <= -1/32)),
 Implies(Not(level#0),
         Or(Not(vsolver#1), Not(INV_1_n <= 0))),
 Implies(Not(level#0), Or(Not(vsolver#1), INV_3_n <= 0)),
 Implies(Not(level#1),
         Or(Not(INV__tr1), Not(vsolver#1), 1/8 <= INV_0_0)),
 Implies(Not(level#1),
         Or(Not(INV__tr1), 0 <= INV_3_0, Not(vsolver#1))),
 Implies(Not(level#1),
         Or(Not(INV__tr1), Not(vsolver#1), 1/16 <= INV_4_0)),
 Implies(Not(level#1),
         Or(Not(INV__tr1), Not(vsolver#1), 1/32 <= INV_2_0)),
 Implies(Not(level#1),
         Or(Not(INV__tr1), Not(vsolver#1), INV_5_0 <= -1/32)),
 Implies(Not(level#1),
         Or(Not(INV__tr1), Not(vsolver#1), INV_6_0 <= -1/32)),
 Implies(Not(level#1),
         Or(Not(INV__tr1),
            Not(vsolver#1),
            Not(INV_1_0 <= 0))),
 Implies(Not(level#1),
         Or(Not(INV__tr1), Not(vsolver#1), INV_3_0 <= 0)),
 Implies(Not(level#1),
         Or(Not(vsolver#1), 9/1024 <= INV_0_n)),
 Implies(Not(level#1), Or(Not(vsolver#1), 1/16 <= INV_4_n)),
 Implies(Not(level#1),
         Or(Not(vsolver#1),
            Not(0 <= INV_6_n),
            Not(INV_1_n <= 1/16))),
 Implies(Not(level#1),
         Or(Not(vsolver#1),
            -1539245/74852864 <=
            1670208/1608167*INV_0_n +
            296992/146197*INV_1_n +
            144192/1608167*INV_2_n +
            -288384/146197*INV_3_n +
            865152/1608167*INV_4_n +
            4063328/1608167*INV_5_n)),
 Implies(Not(level#1),
         Or(Not(vsolver#1),
            Not(INV_2_n <= 1/32),
            6052119/23087272448 <=
            5531171/45092329*INV_0_n +
            66452116/45092329*INV_1_n +
            -84233606/45092329*INV_4_n +
            -101062637/90184658*INV_5_n +
            -108019241/90184658*INV_6_n)),
 Implies(Not(level#1),
         Or(Not(vsolver#1),
            Not(INV_2_n <= 1/32),
            2375274874546603/321791473274742504 <=
            13319516046752/46394387727039*INV_0_n +
            2853684724854016/13407978053114271*INV_4_n +
            -1426842362427008/2366113774078989*INV_5_n)),
 Implies(Not(level#1),
         Or(Not(vsolver#1),
            Not(INV_3_n <= 0),
            22143/58120 <=
            3104/1453*INV_0_n +
            23424/1453*INV_1_n +
            3904/7265*INV_2_n +
            23424/7265*INV_4_n +
            -66368/7265*INV_5_n)),
 Implies(Not(level#1),
         Or(Not(vsolver#1),
            Not(INV_1_n <= 0),
            Not(-1/32 <= INV_5_n),
            30851/71680 <=
            14/3*INV_0_n +
            -5279/560*INV_2_n +
            -22/3*INV_3_n +
            2*INV_4_n +
            -17/3*INV_5_n)),
 Implies(Not(level#1),
         Or(Not(vsolver#1),
            Not(3040/1639*INV_0_n +
                6720/1639*INV_1_n +
                224/1639*INV_2_n +
                -448/149*INV_3_n +
                1344/1639*INV_4_n +
                -3808/1639*INV_5_n <=
                14379/52448))),
 Implies(Not(level#1),
         Or(Not(vsolver#1),
            22143/58120 <=
            3104/1453*INV_0_n +
            23424/1453*INV_1_n +
            3904/7265*INV_2_n +
...
MODEL: [INV_5_n = -10489932856540592703514390053346663311701211096951/3610281908894290661966258592339129419796530593792,
 INV_5_0 = 2694612406172496145795526989832729066832283026863/1128213096529465831864455810105977943686415810560,
 INV_6_0 = 7129194116908971659893430320876881664248744134051/1128213096529465831864455810105977943686415810560,
 INV_ext0_n = False,
 level#0 = True,
 spacer_proxy!#274 = True,
 INV_1_0 = 7032328965294943913138407366501509646390222907/4407082408318225905720530508226476342525061760,
 INV__tr1 = True,
 spacer_proxy!#277 = True,
 spacer_proxy!#276 = True,
 aux!4_n = 2694612406172496145795526989832729066832283026863/1128213096529465831864455810105977943686415810560,
 INV_6_n = 209849273415043592660992889105332630478344472067777/36102819088942906619662585923391294197965305937920,
 spacer_proxy!#279 = True,
 aux!7_n = 1957668599604263011000933293235171761265766061/17628329633272903622882122032905905370100247040,
 INV_2_n = -2682311715466431126097581306455866758829832317491/10315091168269401891332167406683226913704373125120,
 INV_4_n = -15280720342843648202351922091589068652359450670157/14441127635577162647865034369356517679186122375168,
 aux!5_n = 80134074279988120361402781763375070738887936919/64469319801683761820826046291770168210652332032,
 INV_0_n = 14961475776217208878087396812814732111709913329539/36102819088942906619662585923391294197965305937920,
 spacer_proxy!#275 = False,
 aux!2_n = 1/8,
 INV_4_0 = 80134074279988120361402781763375070738887936919/64469319801683761820826046291770168210652332032,
 INV__tr0 = False,
 aux!3_n = 7129194116908971659893430320876881664248744134051/1128213096529465831864455810105977943686415810560,
 aux!6_n = 0,
 level#2 = False,
 INV_0_0 = 685240502765693354492434117255678643112192747473/564106548264732915932227905052988971843207905280,
 level#1 = True,
 INV_1_n = -54664106239810433102088216503184966296112853322449/18051409544471453309831292961695647098982652968960,
 INV_2_0 = 1957668599604263011000933293235171761265766061/17628329633272903622882122032905905370100247040,
 INV_3_0 = -2002519642230217747305182944265439148506428058764567/436618468356903276931544398511013464206642918686720,
 aux!8_n = 7032328965294943913138407366501509646390222907/4407082408318225905720530508226476342525061760,
 INV#reach_tag_0_0 = True,
 aux!9_n = 685240502765693354492434117255678643112192747473/564106548264732915932227905052988971843207905280,
 INV_3_n = 0,
 vsolver#1 = True]
checking inductive for cube: [INV_3_n == 0, INV_6_n <= 0, Not(19618/8323*INV_5_n +
    -2308/1189*INV_0_n +
    -34620/8323*INV_1_n +
    -6924/8323*INV_4_n +
    -1154/8323*INV_2_n +
    -1*INV_6_n <=
    -70211/2130688)]
CUBE_LITS:
spacer_proxy!#274 : INV_3_n == 0
spacer_proxy!#275 : INV_6_n <= 0
spacer_proxy!#277 : Not(19618/8323*INV_5_n +
    -2308/1189*INV_0_n +
    -34620/8323*INV_1_n +
    -6924/8323*INV_4_n +
    -1154/8323*INV_2_n +
    -1*INV_6_n <=
    -70211/2130688)
PRE_LEMMA_LIT:
spacer_proxy!#280 : Or(Not(INV_3_0 == 0),
   Not(INV_6_0 <= 0),
   19618/8323*INV_5_0 +
   -2308/1189*INV_0_0 +
   -34620/8323*INV_1_0 +
   -6924/8323*INV_4_0 +
   -1154/8323*INV_2_0 +
   -1*INV_6_0 <=
   -70211/2130688)
SELF.LEVELS [Not(level#0), Not(level#1), Not(level#2), Not(level#3)]
2
DISABLE level 0
DISABLE level 1
ACTIVATE level 2
ASSUMPTIONs:
 [level#0, level#1, Not(level#2), vsolver#1, Not(INV_ext0_n), spacer_proxy!#280, spacer_proxy!#274, spacer_proxy!#275, spacer_proxy!#277]
DROP SUCCESSFUL. New cube is:
[INV_3_n == 0, INV_6_n <= 0, Not(19618/8323*INV_5_n +
    -2308/1189*INV_0_n +
    -34620/8323*INV_1_n +
    -6924/8323*INV_4_n +
    -1154/8323*INV_2_n +
    -1*INV_6_n <=
    -70211/2130688)]
UNSAT CORE:
 [vsolver#1,
 Not(level#2),
 spacer_proxy!#274,
 spacer_proxy!#275,
 spacer_proxy!#277,
 Not(INV_ext0_n)]
checking inductive for cube: [INV_3_n == 0, INV_6_n <= 0]
CUBE_LITS:
spacer_proxy!#274 : INV_3_n == 0
spacer_proxy!#275 : INV_6_n <= 0
PRE_LEMMA_LIT:
spacer_proxy!#281 : Or(Not(INV_3_0 == 0), Not(INV_6_0 <= 0))
SELF.LEVELS [Not(level#0), Not(level#1), Not(level#2), Not(level#3)]
2
DISABLE level 0
DISABLE level 1
ACTIVATE level 2
ASSUMPTIONs:
 [level#0, level#1, Not(level#2), vsolver#1, Not(INV_ext0_n), spacer_proxy!#281, spacer_proxy!#274, spacer_proxy!#275]
DROP FAILED
WAS CHECKING:
 [Or(Not(INV__tr1),
    Not(vsolver#1),
    Not(Or(Not(And(Or(Not(0 <= INV_0_0), aux!9_n == INV_0_0),
                   Or(0 <= INV_0_0, aux!9_n == 0))),
           Not(And(Or(Not(0 <= INV_1_0), aux!8_n == INV_1_0),
                   Or(0 <= INV_1_0, aux!8_n == 0))),
           Not(And(Or(Not(0 <= INV_2_0), aux!7_n == INV_2_0),
                   Or(0 <= INV_2_0, aux!7_n == 0))),
           Not(And(Or(Not(0 <= INV_4_0), aux!5_n == INV_4_0),
                   Or(0 <= INV_4_0, aux!5_n == 0))),
           Not(And(Or(Not(0 <= INV_3_0), aux!6_n == INV_3_0),
                   Or(0 <= INV_3_0, aux!6_n == 0))),
           Not(And(Or(Not(0 <= INV_5_0), aux!4_n == INV_5_0),
                   Or(0 <= INV_5_0, aux!4_n == 0))),
           Not(And(Or(Not(0 <= INV_6_0), aux!3_n == INV_6_0),
                   Or(0 <= INV_6_0, aux!3_n == 0))),
           Not(INV_0_n +
               -3/32*aux!2_n +
               3/32*aux!3_n +
               17/32*aux!4_n +
               -3/16*aux!5_n +
               11/16*aux!6_n +
               -1/32*aux!7_n +
               -15/16*aux!8_n +
               -7/16*aux!9_n ==
               0),
           Not(INV_1_n +
               1/32*aux!2_n +
               9/16*aux!3_n +
               3/32*aux!4_n +
               -9/16*aux!5_n +
               11/32*aux!6_n +
               -7/32*aux!7_n +
               7/32*aux!8_n +
               -5/16*aux!9_n ==
               0),
           Not(INV_2_n +
               1/32*aux!3_n +
               -1/4*aux!4_n +
               19/32*aux!5_n +
               -23/32*aux!6_n +
               -13/16*aux!7_n +
               5/16*aux!8_n +
               -3/8*aux!9_n ==
               1/32),
           Not(INV_3_n +
               1/8*aux!2_n +
               1/32*aux!3_n +
               -3/32*aux!4_n +
               1/4*aux!5_n +
               -13/32*aux!6_n +
               -3/8*aux!7_n +
               -1/16*aux!8_n +
               -5/32*aux!9_n ==
               -1/32),
           Not(INV_4_n +
               -1/16*aux!2_n +
               5/16*aux!3_n +
               -7/32*aux!5_n +
               -3/8*aux!6_n +
               -1/2*aux!7_n +
               -1/32*aux!8_n +
               -7/16*aux!9_n ==
               0),
           Not(INV_5_n +
               -1/16*aux!2_n +
               21/32*aux!3_n +
               -19/32*aux!4_n +
               3/4*aux!5_n +
               -3/8*aux!6_n +
               1/32*aux!7_n +
               5/32*aux!8_n +
               -7/8*aux!9_n ==
               -1/16),
           Not(INV_6_n +
               -1/32*aux!2_n +
               -19/32*aux!3_n +
               -37/32*aux!4_n +
               -9/16*aux!5_n +
               13/16*aux!6_n +
               -7/32*aux!7_n +
               11/32*aux!8_n +
               3/4*aux!9_n ==
               1/32),
           Not(3/32 <= aux!2_n),
           Not(aux!2_n <= 1/8)))),
 Or(Not(INV__tr0),
    Not(vsolver#1),
    Not(Or(Not(INV_0_n == 1/8),
           Not(INV_1_n == 1/16),
           Not(INV_2_n == 1/32),
           Not(INV_3_n == 0),
           Not(INV_4_n == 1/16),
           Not(INV_5_n == -1/32),
           Not(INV_6_n == -1/32)))),
 Or(Not(INV__tr1),
    INV#reach_tag_0_0,
    Not(Or(Not(INV_0_0 == 1/8),
           Not(INV_1_0 == 1/16),
           Not(INV_2_0 == 1/32),
           Not(INV_3_0 == 0),
           Not(INV_4_0 == 1/16),
           Not(INV_5_0 == -1/32),
           Not(INV_6_0 == -1/32))),
    Not(vsolver#1)),
 Or(INV_ext0_n, INV__tr0, INV__tr1),
 Implies(Not(level#0), Or(Not(INV__tr1), Not(vsolver#1))),
 Implies(Not(level#0), Or(Not(vsolver#1), 1/8 <= INV_0_n)),
 Implies(Not(level#0), Or(Not(vsolver#1), 0 <= INV_3_n)),
 Implies(Not(level#0), Or(Not(vsolver#1), 1/16 <= INV_4_n)),
 Implies(Not(level#0), Or(Not(vsolver#1), 1/32 <= INV_2_n)),
 Implies(Not(level#0), Or(Not(vsolver#1), INV_5_n <= -1/32)),
 Implies(Not(level#0), Or(Not(vsolver#1), INV_6_n <= -1/32)),
 Implies(Not(level#0),
         Or(Not(vsolver#1), Not(INV_1_n <= 0))),
 Implies(Not(level#0), Or(Not(vsolver#1), INV_3_n <= 0)),
 Implies(Not(level#1),
         Or(Not(INV__tr1), Not(vsolver#1), 1/8 <= INV_0_0)),
 Implies(Not(level#1),
         Or(Not(INV__tr1), 0 <= INV_3_0, Not(vsolver#1))),
 Implies(Not(level#1),
         Or(Not(INV__tr1), Not(vsolver#1), 1/16 <= INV_4_0)),
 Implies(Not(level#1),
         Or(Not(INV__tr1), Not(vsolver#1), 1/32 <= INV_2_0)),
 Implies(Not(level#1),
         Or(Not(INV__tr1), Not(vsolver#1), INV_5_0 <= -1/32)),
 Implies(Not(level#1),
         Or(Not(INV__tr1), Not(vsolver#1), INV_6_0 <= -1/32)),
 Implies(Not(level#1),
         Or(Not(INV__tr1),
            Not(vsolver#1),
            Not(INV_1_0 <= 0))),
 Implies(Not(level#1),
         Or(Not(INV__tr1), Not(vsolver#1), INV_3_0 <= 0)),
 Implies(Not(level#1),
         Or(Not(vsolver#1), 9/1024 <= INV_0_n)),
 Implies(Not(level#1), Or(Not(vsolver#1), 1/16 <= INV_4_n)),
 Implies(Not(level#1),
         Or(Not(vsolver#1),
            Not(0 <= INV_6_n),
            Not(INV_1_n <= 1/16))),
 Implies(Not(level#1),
         Or(Not(vsolver#1),
            -1539245/74852864 <=
            1670208/1608167*INV_0_n +
            296992/146197*INV_1_n +
            144192/1608167*INV_2_n +
            -288384/146197*INV_3_n +
            865152/1608167*INV_4_n +
            4063328/1608167*INV_5_n)),
 Implies(Not(level#1),
         Or(Not(vsolver#1),
            Not(INV_2_n <= 1/32),
            6052119/23087272448 <=
            5531171/45092329*INV_0_n +
            66452116/45092329*INV_1_n +
            -84233606/45092329*INV_4_n +
            -101062637/90184658*INV_5_n +
            -108019241/90184658*INV_6_n)),
 Implies(Not(level#1),
         Or(Not(vsolver#1),
            Not(INV_2_n <= 1/32),
            2375274874546603/321791473274742504 <=
            13319516046752/46394387727039*INV_0_n +
            2853684724854016/13407978053114271*INV_4_n +
            -1426842362427008/2366113774078989*INV_5_n)),
 Implies(Not(level#1),
         Or(Not(vsolver#1),
            Not(INV_3_n <= 0),
            22143/58120 <=
            3104/1453*INV_0_n +
            23424/1453*INV_1_n +
            3904/7265*INV_2_n +
            23424/7265*INV_4_n +
            -66368/7265*INV_5_n)),
 Implies(Not(level#1),
         Or(Not(vsolver#1),
            Not(INV_1_n <= 0),
            Not(-1/32 <= INV_5_n),
            30851/71680 <=
            14/3*INV_0_n +
            -5279/560*INV_2_n +
            -22/3*INV_3_n +
            2*INV_4_n +
            -17/3*INV_5_n)),
 Implies(Not(level#1),
         Or(Not(vsolver#1),
            Not(3040/1639*INV_0_n +
                6720/1639*INV_1_n +
                224/1639*INV_2_n +
                -448/149*INV_3_n +
                1344/1639*INV_4_n +
                -3808/1639*INV_5_n <=
                14379/52448))),
 Implies(Not(level#1),
         Or(Not(vsolver#1),
            22143/58120 <=
            3104/1453*INV_0_n +
            23424/1453*INV_1_n +
            3904/7265*INV_2_n +
...
MODEL: [INV_5_n = -1/32,
 INV_5_0 = -1723/267488,
 INV_6_0 = -14995/267488,
 INV_ext0_n = False,
 level#0 = True,
 spacer_proxy!#274 = True,
 INV_1_0 = 5041/133744,
 INV__tr1 = False,
 spacer_proxy!#277 = False,
 spacer_proxy!#281 = True,
 spacer_proxy!#276 = False,
 INV_6_n = -1/32,
 INV_2_n = 1/32,
 INV_4_n = 1/16,
 spacer_proxy!#275 = True,
 INV_0_n = 1/8,
 INV_4_0 = 5041/133744,
 INV__tr0 = True,
 level#2 = False,
 INV_0_0 = 9/1024,
 level#1 = True,
 INV_1_n = 1/16,
 INV_2_0 = 14995/267488,
 INV_3_0 = -1659/66872,
 INV_3_n = 0,
 vsolver#1 = True]
FINAL CUBE: And(INV_3_n == 0,
    INV_6_n <= 0,
    Not(19618/8323*INV_5_n +
        -2308/1189*INV_0_n +
        -34620/8323*INV_1_n +
        -6924/8323*INV_4_n +
        -1154/8323*INV_2_n +
        -1*INV_6_n <=
        -70211/2130688))
del converter
ast_manager LEAKED: 34
Leaked: decl INV_5_0 :: Real
#440 := (<= 0::Real INV_5_0)
(not #440)
id: 441
Leaked: decl INV_4_0 :: Real
#456 := (<= 0::Real INV_4_0)
(not #456)
id: 457
Leaked: decl INV_2_0 :: Real
#464 := (<= 0::Real INV_2_0)
(not #464)
id: 465
Leaked: decl INV_0_0 :: Real
#480 := (<= 0::Real INV_0_0)
(not #480)
id: 481
Leaked: decl INV_6_0 :: Real
#432 := (<= 0::Real INV_6_0)
(not #432)
id: 433
Leaked: decl INV_3_0 :: Real
#448 := (<= 0::Real INV_3_0)
(not #448)
id: 449
Leaked: decl INV_1_0 :: Real
#472 := (<= 0::Real INV_1_0)
(not #472)
id: 473
