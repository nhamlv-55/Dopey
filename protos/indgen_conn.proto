// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package indgen_conn;

// The query service definition
service Greeter {
    // Sends a greeting
    rpc SayHello (HelloRequest) returns (HelloReply) {}

    // Sends a lemma to python server
    rpc SendLemma(Lemma) returns (Ack) {}

    rpc QueryMask(Query) returns (FullAnswer) {}
}


// The request message containing lemma
message Lemma {
    string lemma_before = 1;
    string lemma_after = 2;
}


// The request message containing the user's name.
message HelloRequest {
    string name = 1;
}
message Query {
    string lemma = 1;
    repeated int32 kept_lits = 2;
    int32 lemma_size = 3;
    repeated int32 to_be_checked_lits = 4;
    bool last_ans_success = 5;
}
// The response message containing the greetings
message HelloReply {
    string message = 1;
}

// The response message from the server
message Answer {
    //ack_message = True -> the server is still accepting more datapoints
    //ack_message = False -> the server doesnt accept more datapoints
    repeated int32 answer = 1;
}
// The response message from the server
message FullAnswer {
    //ack_message = True -> the server is still accepting more datapoints
    //ack_message = False -> the server doesnt accept more datapoints
    bool dirty = 1;
    repeated int32 mask = 2;
    repeated int32 new_kept_lits = 3;
    repeated int32 new_to_be_checked_lits = 4;
    repeated int32 checking_lits = 5;
}
// The response message from the server
message Ack {
    //ack_message = True -> the server is still accepting more datapoints
    //ack_message = False -> the server doesnt accept more datapoints
    bool ack_message = 1;
}